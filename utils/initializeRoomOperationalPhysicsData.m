function physTable = initializeRoomOperationalPhysicsData(NameValueArgs)
% Function to create Table for building operational physics data. This is
% required only during simulations where room model has radiators and/or
% underfloor cooling and is connected to heat pumps.

% Copyright 2024 The MathWorks, Inc.

    arguments
        NameValueArgs.Building struct {mustBeNonempty}
        NameValueArgs.Duration datetime {mustBeNonempty}
    end

    [nApt, nRooms] = getNumAptAndRoomsFromFloorPlan(NameValueArgs.Building);
    varTypes = ["datetime",...
                "double",...
                "double",...
                "double",...
                "string",...
                "logical",...
                "double",...
                "double",...
                "double"];
    varNames = ["Date and Time",...
                "Level",...
                "Apartment",...
                "Room",...
                "Room Name",...
                "HVAC On",...
                "Heat Source (W)",...
                "Electrical Load (W)",...
                "Room Occupancy Level"];
    sz = [nApt*max(nRooms)*length(NameValueArgs.Duration), length(varTypes)];
    physTable = table('Size',sz,'VariableTypes',varTypes,'VariableNames',varNames);

    count = 0;
    for t = 1:length(NameValueArgs.Duration)
        for i = 1:nApt
            for j = 1:nRooms(i)
                count = count+1;
                physTable.("Date and Time")(count,1) = NameValueArgs.Duration(1,t);
                physTable.("Room Name")(count,1) = NameValueArgs.Building.("apartment"+i).("room"+j).name;
                physTable.Room(count,1) = j;
                physTable.Apartment(count,1) = i;
                physTable.Level(count,1) = NameValueArgs.Building.("apartment"+i).("room"+j).geometry.dim.floorLevel;
                physTable.("HVAC On")(count,1) = true; % Default: HVAC ON for all rooms, all the time
            end
        end
    end
end